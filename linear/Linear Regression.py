{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f79304c3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Intercept 25023.428144264297\n",
      "coffecient [9656.37016665]\n",
      "      Actual        predict\n",
      "4    39891.0   46267.442511\n",
      "25  105582.0  111930.759644\n",
      "0    39343.0   35645.435328\n",
      "20   91738.0   90686.745277\n",
      "6    60150.0   53992.538644\n",
      "3    43525.0   44336.168478\n",
      "22  101302.0  101308.752461\n",
      "18   81363.0   81996.012127\n",
      "27  112635.0  117724.581744\n",
      "7    54445.0   55923.812678\n",
      "Mean Absolute Error 3165.081039320476\n",
      "Mean Squared Error 16280669.297302097\n",
      "Root Mean Squared Error 4034.931139102884\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Simple Linear Regression\n",
    "###########################\n",
    "#import libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as mtp\n",
    "\n",
    "data_set = pd.read_csv(\"Salary_Data.csv\")\n",
    "\n",
    "#print(data_set)\n",
    "#split data into dependatn and independant\n",
    "# -1 to remove the last column (1)  to extract the second colum(1)\n",
    "x = data_set.iloc[:, :-1]\n",
    "y = data_set.iloc[:, 1]\n",
    "#print(x, y)\n",
    "# Splitting the dataset into training and test set\n",
    "from sklearn.model_selection import train_test_split\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 1/3)\n",
    "#print(x_test, y_test)\n",
    "##Fitting the Simple Linear Regression model to the training dataset  \n",
    "from sklearn.linear_model import LinearRegression\n",
    "reg = LinearRegression()\n",
    "reg.fit(x_train, y_train)\n",
    "print(\"Intercept\", reg.intercept_)\n",
    "print(\"coffecient\", reg.coef_)\n",
    "\n",
    "#Prediction of Test and Training set result  \n",
    "y_pred= reg.predict(x_test)\n",
    "x_pred= reg.predict(x_train)\n",
    "###############################################################\n",
    "df = pd.DataFrame({'Actual': y_test, 'predict': y_pred})\n",
    "print(df)\n",
    "###############################################################\n",
    "#Print Errors\n",
    "from sklearn import metrics\n",
    "print(\"Mean Absolute Error\", metrics.mean_absolute_error(y_test, y_pred))\n",
    "print(\"Mean Squared Error\", metrics.mean_squared_error(y_test, y_pred))\n",
    "print(\"Root Mean Squared Error\", np.sqrt(metrics.mean_squared_error(y_test, y_pred)))\n",
    "\n",
    "\n",
    "\n",
    "################################################################\n",
    "#mtp.scatter(x_train, y_train, color=\"green\")\n",
    "data_set.plot(x=\"YearsExperience\", y=\"Salary\")\n",
    "mtp.plot(x_test, y_pred, color=\"red\")    \n",
    "mtp.title(\"Salary vs Experience (Training Dataset)\")  \n",
    "mtp.xlabel(\"Years of Experience\")  \n",
    "mtp.ylabel(\"Salary\")  \n",
    "mtp.show()  \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "979c1df4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
